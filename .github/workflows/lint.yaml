name: argocd-lint

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: baseline
            args: >-
              manifests --rules argocd-lint-config/baseline.yaml --severity-threshold=warn
          - name: render
            args: >-
              manifests --rules argocd-lint-config/prod-strict.yaml --render
              --helm-binary /workspace/.lint-tools/helm
              --kustomize-binary /workspace/.lint-tools/kustomize
              --severity-threshold=warn
            needs_render_tools: true
          - name: security
            args: >-
              manifests --rules argocd-lint-config/security.yaml
              --plugin-dir policy-plugins/custom
              --severity-threshold=warn
          - name: dry-run
            args: >-
              manifests --rules argocd-lint-config/prod-strict.yaml --render
              --helm-binary /workspace/.lint-tools/helm
              --kustomize-binary /workspace/.lint-tools/kustomize
              --kubeconform-binary /workspace/.lint-tools/kubeconform
              --dry-run kubeconform
              --severity-threshold=error
            needs_render_tools: true
            needs_kubeconform: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare render tooling
        if: matrix.needs_render_tools == true
        run: |
          set -euo pipefail
          mkdir -p .lint-tools
          curl -sSL https://get.helm.sh/helm-v3.14.0-linux-amd64.tar.gz -o .lint-tools/helm.tgz
          tar -xzf .lint-tools/helm.tgz -C .lint-tools linux-amd64/helm
          mv .lint-tools/linux-amd64/helm .lint-tools/helm
          rm -rf .lint-tools/linux-amd64 .lint-tools/helm.tgz
          curl -sSL https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv5.1.0/kustomize_v5.1.0_linux_amd64.tar.gz -o .lint-tools/kustomize.tgz
          tar -xzf .lint-tools/kustomize.tgz -C .lint-tools kustomize
          rm .lint-tools/kustomize.tgz
          chmod +x .lint-tools/helm .lint-tools/kustomize

      - name: Install kubeconform
        if: matrix.needs_kubeconform == true
        run: |
          set -euo pipefail
          mkdir -p .lint-tools
          curl -sSL https://github.com/yannh/kubeconform/releases/download/v0.6.4/kubeconform-linux-amd64.tar.gz -o .lint-tools/kubeconform.tgz
          tar -xzf .lint-tools/kubeconform.tgz -C .lint-tools kubeconform
          rm .lint-tools/kubeconform.tgz
          chmod +x .lint-tools/kubeconform

      - name: Run argocd-lint (${{ matrix.name }})
        env:
          LINT_ARGS: ${{ matrix.args }}
        run: |
          set -euo pipefail
          docker run --rm \
            -v "$PWD:/workspace" \
            -w /workspace \
            ghcr.io/harchuk/argocd-lint/argocd-lint:latest \
            ${LINT_ARGS}

      - name: Export SARIF report (baseline only)
        if: matrix.name == 'baseline'
        run: |
          docker run --rm \
            -v "$PWD:/workspace" \
            -w /workspace \
            ghcr.io/harchuk/argocd-lint/argocd-lint:latest \
            manifests --rules argocd-lint-config/baseline.yaml --format sarif > argocd-lint.sarif

      - name: Upload findings to GitHub Code Scanning
        if: matrix.name == 'baseline'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: argocd-lint.sarif
